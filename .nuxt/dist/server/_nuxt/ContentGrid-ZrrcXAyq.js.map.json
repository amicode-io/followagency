{"file":"ContentGrid-ZrrcXAyq.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASM,UAAA,UAAmC,eAAe,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTrD,IAAA,iCAAAA,kBAAL;AACHA,gBAAA,WAAY,IAAA;AACZA,gBAAA,UAAW,IAAA;AACXA,gBAAA,WAAY,IAAA;AAHJA,SAAAA;AAAA,GAAA,gBAAA,CAAA,CAAA;AAMA,IAAA,6BAAAC,cAAL;AACHA,YAAA,QAAS,IAAA;AACTA,YAAA,OAAQ,IAAA;AAFAA,SAAAA;AAAA,GAAA,YAAA,CAAA,CAAA;;;;;;;;;;;;;ACyBZ,UAAM,SAAS,SAAS,OAAQ,iBAAS,aAAa,aAAa,QAAI,SAAK,aAAa,aAAa,QAAG,QAAK,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWjH,UAAM,aAA4B;AAAA,MAChC,WAAWC;AAAAA,MACX,UAAUC;AAAAA,MACV,WAAWC;AAAAA,IACb;AASA,UAAM,MAAM,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["GridItemType","GridType","__nuxt_component_0","__nuxt_component_1","__nuxt_component_2"],"sources":["../../../../components/atoms/Fitty.vue","../../../../models/GridItem.ts","../../../../components/atoms/GridItem.vue","../../../../components/content/ContentGrid.vue"],"sourcesContent":["<template>\n  <div ref=\"fittyEl\" class=\"fitty\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport fitty from 'fitty';\n\nconst fittyEl: Ref<HTMLElement | null> = useTemplateRef('fittyEl');\n\ninterface Props {\n  minSize?: number;\n  maxSize?: number;\n}\n\nconst { minSize = 16, maxSize = 640 } = defineProps<Props>();\n\nonMounted(() => {\n  fitty(fittyEl.value as HTMLElement, {\n    minSize,\n    maxSize,\n  })\n})\n</script>","export enum GridItemType {\n    GridImage = 'GridImage',\n    GridText = 'GridText',\n    GridVideo = 'GridVideo'\n}\n\nexport enum GridType {\n    TikTok = 'TikTok',\n    Reels = 'Reels',\n}\n\nexport interface GridItem {\n    type: GridItemType;\n    url?: string;\n    value: string;\n    gridType?: GridType; // Dodano typ gridType\n}","<template>\n  <HumbleScroll\n    animation=\"fade up\"\n    :once=\"true\"\n    :variables=\"{ delay: `${index * 100}ms`}\"\n    :class=\"`\n      m-grid-item--${index}\n      m-grid-item--${type}\n    `\"\n    innerClass=\"m-grid-item m-grid-item__inner\"\n    >\n    <a\n      v-if=\"isLink\"\n      :href=\"url\"\n      >\n      <component :is :value />\n    </a>\n    <component v-else :is :value />\n  </HumbleScroll>\n</template>\n\n<script lang=\"ts\" setup>\nimport { GridItemType } from '~/models/GridItem';\nimport type { GridItem } from '~/models/GridItem';\n\ninterface GridItemProps extends GridItem {\n  index: number;\n  is: any;\n}\n\nconst { type = '', url = '' } = defineProps<GridItemProps>();\nconst isLink = computed(() => ((type === GridItemType.GridImage || type === GridItemType.GridText) && url !== \"\"));\n</script>\n\n<style>\n\n</style>","<template>\n\t<section\n    :id=\"id || uid\"\n    :class=\"`m-grid m-grid--${type}`\"\n    :aria-label=\"title\"\n    >\n\n    <div class=\"m-grid-items container\">\n      <AtomsGridItem\n        v-for=\"(item, index) in items\"\n        :index=\"index + 1\"\n        :is=\"components[item.type]\"\n        :type=\"item.type\"\n        :url=\"item?.url\"\n        :value=\"item.value\"\n        />\n    </div>\n\n    <div class=\"m-grid-bg\" aria-hidden=\"true\">\n      <HumbleScroll :key=\"`anim1-${id || uid}`\" :once=\"true\" animation=\"reveal-left blur fast\" class=\"w-100\">\n        <AtomsFitty>{{title}}</AtomsFitty>\n      </HumbleScroll>\n\n      <HumbleScroll\n        :key=\"`anim2-${id || uid}`\"\n        animation=\"reveal-right blur fast\"\n        :once=\"true\"\n        :variables=\"{ delay: `300ms`}\"\n        class=\"w-100\"\n        >\n        <AtomsFitty>{{title}}</AtomsFitty>\n      </HumbleScroll>\n    </div>\n  </section>\n</template>\n\n<script lang=\"ts\" setup>\nimport { GridType } from '~/models/GridItem';\n\nimport type { GridItem } from '~/models/GridItem';\nimport type { ComponentType } from '~/models/ComponentType';\n\nconst components: ComponentType = {\n  GridImage: resolveComponent('AtomsGridImage'),\n  GridText: resolveComponent('AtomsGridText'),\n  GridVideo: resolveComponent('AtomsGridVideo'),\n};\n\ninterface Props {\n  id?: string;\n  title: string;\n  type?: GridType;\n  items: GridItem[];\n};\n\nconst uid = useId();\nconst { id = \"\", type = GridType.TikTok } = defineProps<Props>();\n</script>\n\n<style lang=\"scss\" scoped>\n.m-grid {\n  position: relative;\n  overflow-x: clip;\n  padding-block: 5vw;\n  margin-block: clamp(5rem, 7vw, 10rem);\n\n  + .m-grid {\n    margin-block-start: calc(-5vw); // minimal value\n  }\n}\n\n.m-grid-bg {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  font-family: var(--font-accent);\n  line-height: 1;\n  font-weight: 700;\n  position: absolute;\n  top: 1%;\n  left: 0;\n  width: 100%;\n  z-index: -1;\n  color: rgba(#fff, 0.2);\n  text-align: center;\n\n  @media (width >= 60rem) {\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  > div {\n    line-height: 0.75;\n    transform: translateY(-0.07em); // visual offset\n\n    @media (width < 60rem) {\n      &:nth-child(1) {\n        display: none;\n      }\n    }\n  }\n}\n\n.m-grid-items {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  // grid-template-rows: repeat(10, 1fr);\n  gap: 1rem;\n\n  @media (width >= 60rem) {\n    gap: 1.5rem;\n    // grid-template-rows: repeat(4, 1fr);\n    aspect-ratio: 976 / 598;\n  }\n}\n\n::v-deep(.m-grid-item) {\n  display: block;\n  background-color: #ccc;\n  border-style: solid;\n  border-color: var(--fo-color-black, #000);\n  border-width: var(--fo-border-width, 2px);\n  border-radius: 1rem;\n  overflow: hidden;\n}\n\n.m-grid-item--GridText {\n\n  ::v-deep(.m-grid-item) {\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n    background-color: transparent;\n    border-color: transparent;\n    font-family: var(--font-accent);\n    font-weight: 400;\n    font-style: normal;\n  }\n\n  ::v-deep(.m-grid-item__inner) {\n    padding: 0.25rem;\n    overflow: hidden;\n    max-width: 50vw;\n  }\n}\n\n::v-deep(.m-grid-item__inner) {\n\n  &,\n  // child elements\n  > a,\n  > video,\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n\n  video,\n  img {\n    object-fit: cover;\n  }\n}\n\n// variations\n.m-grid--TikTok {\n  .m-grid-items {\n    @media (width >= 60rem) {\n      grid-template-columns:\n        minmax(12rem, 4fr) minmax(6rem, 2fr) minmax(9rem, 3fr)\n        minmax(6rem, 2fr);\n    }\n  }\n\n  .m-grid-item {\n    &--1 {\n      grid-area: 7 / 1 / 11 / 3;\n    }\n\n    &--2 {\n      grid-area: 5 / 1 / 7 / 2;\n    }\n\n    &--3 {\n      grid-area: 5 / 2 / 7 / 3;\n    }\n\n    &--4 {\n      grid-area: 1 / 1 / 2 / 2;\n    }\n\n    &--5 {\n      grid-area: 2 / 1 / 5 / 2;\n    }\n\n    &--6 {\n      grid-area: 1 / 2 / 3 / 3;\n    }\n\n    &--7 {\n      grid-area: 3 / 2 / 5 / 3;\n    }\n\n    @media (width >= 60rem) {\n      &--1 {\n        grid-area: 1 / 1 / 5 / 2;\n      }\n\n      &--2 {\n        grid-area: 1 / 2 / 3 / 3;\n      }\n\n      &--3 {\n        grid-area: 3 / 2 / 5 / 3;\n      }\n\n      &--4 {\n        grid-area: 1 / 3 / 2 / 4;\n      }\n\n      &--5 {\n        grid-area: 2 / 3 / 5 / 4;\n      }\n\n      &--6 {\n        grid-area: 1 / 4 / 3 / 5;\n      }\n\n      &--7 {\n        grid-area: 3 / 4 / 5 / 5;\n      }\n    }\n  }\n}\n\n.m-grid--Reels {\n  .m-grid-bg > div {\n    text-transform: uppercase;\n  }\n\n  .m-grid-items {\n    @media (width >= 60rem) {\n      grid-template-columns:\n        minmax(6rem, 2fr) minmax(9rem, 3fr) minmax(6rem, 2fr)\n        minmax(12rem, 4fr);\n    }\n  }\n\n  .m-grid-item {\n    &--1 {\n      grid-area: 5 / 1 / 7 / 2;\n    }\n\n    &--2 {\n      grid-area: 5 / 2 / 7 / 3;\n    }\n\n    &--3 {\n      grid-area: 2 / 1 / 5 / 2;\n    }\n\n    &--4 {\n      grid-area: 1 / 1 / 2 / 2;\n    }\n\n    &--5 {\n      grid-area: 1 / 2 / 3 / 3;\n    }\n\n    &--6 {\n      grid-area: 3 / 2 / 5 / 3;\n    }\n\n    &--7 {\n      grid-area: 7 / 1 / 11 / 3;\n    }\n\n    @media (width >= 60rem) {\n      &--1 {\n        grid-area: 1 / 1 / 3 / 2;\n      }\n\n      &--2 {\n        grid-area: 3 / 1 / 5 / 2;\n      }\n\n      &--3 {\n        grid-area: 1 / 2 / 4 / 3;\n      }\n\n      &--4 {\n        grid-area: 4 / 2 / 5 / 3;\n      }\n\n      &--5 {\n        grid-area: 1 / 3 / 3 / 4;\n      }\n\n      &--6 {\n        grid-area: 3 / 3 / 5 / 4;\n      }\n\n      &--7 {\n        grid-area: 1 / 4 / 5 / 5;\n      }\n    }\n  }\n}\n</style>"],"version":3}