{"file":"ContentSocial-DRypqPDs.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBM,UAAA,aAAa,IAAI,KAAK;AAE5B,UAAM,YAAY,CAAC,OAAO,IAAI,MAAM;AAClC,iBAAW,QAAQ;AAAA,IACrB;AAEA,UAAM,aAAa,CAAC,OAAO,IAAI,MAAM;AACnC,iBAAW,QAAQ;AAAA,IACrB;AAEA,UAAM,eAAe,IAAI;AAAA,MACvB,eAAe,CAAC,MAAM,UAAU,MAAS;AAAA,MACzC,kBAAkB,CAAC,MAAM,WAAW,SAAY;AAAA,MAChD,eAAe,CAAC,MAAM,UAAU,MAAS;AAAA,MACzC,gBAAgB,CAAC,MAAM,WAAW,OAAU;AAAA,MAC5C,iBAAiB,CAAC,MAAM,UAAU,QAAW;AAAA,MAC7C,mBAAmB,CAAC,MAAM,WAAW,UAAa;AAAA,IAAA,CACnD;AAED,UAAM,gBAAgB,IAAI;AAAA,MACxB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,cAAc;AAAA,MACd,MAAM;AAAA,MACN,WAAW;AAAA,MACX,UAAU;AAAA,MACV,KAAK;AAAA,MACL,YAAY;AAAA,IAAA,CACb;AAQD,UAAM,MAAM,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/content/ContentSocial.vue"],"sourcesContent":["<template>\n  <section\n    :id=\"id ? id : uid\"\n    class=\"m-socialmedia\"\n    aria-label=\"Social media\"\n    :class=\"{'is-dragging': isDragging}\"\n    >\n    <HumbleScroll animation=\"fade up blur slow\" :once=\"true\">\n      <Splide :options=\"splideOptions\" :aria-label=\"title\" v-on=\"splideEvents\">\n        <SplideSlide v-for=\"(item, index) in items\" :key=\"id\">\n            <AtomsPhone :item :index />\n        </SplideSlide>\n      </Splide>\n    </HumbleScroll>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport type { SocialItem } from '~/models/SocialItem';\n\nimport { Splide, SplideSlide } from '@splidejs/vue-splide';\nimport '@splidejs/vue-splide/css';\n\nconst isDragging = ref(false)\n\nconst startMove = (text = '', e) => {\n  isDragging.value = true;\n}\n\nconst finishMove = (text = '', e) => {\n  isDragging.value = false;\n}\n\nconst splideEvents = ref({\n  \"splide:drag\": (e) => startMove('drag', e),\n  \"splide:dragged\": (e) => finishMove('dragged', e),\n  \"splide:move\": (e) => startMove('move', e),\n  \"splide:moved\": (e) => finishMove('moved', e),\n  \"splide:scroll\": (e) => startMove('scroll', e),\n  \"splide:scrolled\": (e) => finishMove('scrolled', e),\n});\n\nconst splideOptions = ref({\n  type: \"loop\",\n  drag: \"free\",\n  focus: \"center\",\n  updateOnMove: true,\n  snap: true,\n  autoWidth: true,\n  autoplay: true,\n  gap: \"2rem\",\n  pagination: false,\n})\n\ninterface Props {\n  id: string;\n  title: string;\n  items: SocialItem[];\n};\n\nconst uid = useId();\nconst { id = \"\" } = defineProps<Props>();\n</script>\n\n<style lang=\"scss\" scoped>\n.m-socialmedia {\n  position: relative;\n  --item-scale: 1;\n  --item-multiplier: 1;\n  --item-scale-lg: 1.3;\n  --item-scale-md: 1.1;\n\n  &.is-dragging {\n    --item-scale-lg: 1;\n    --item-scale-md: 1;\n    --item-shadow: none;\n  }\n\n  &:not(:first-child) {\n    margin-block-start: 6rem;\n  }\n\n  &:not(:last-child) {\n    margin-block-end: 4rem;\n  }\n\n  &::v-deep(.splide__track) {\n    padding-block: 4rem;\n  }\n\n  &::v-deep(.splide__pagination__page) {\n    background-color: rgb(0 0 0 / 50%);\n\n    &.is-active {\n      background-color: rgba(0 0 0 / 100%);\n      transform: scale(1.2);\n    }\n  }\n\n  ::v-deep(.splide__list) {\n    height: calc(var(--width) * 1167/579 * 1.3);\n    --width: clamp(15rem, 12.333rem + 8.889vw, 23rem);\n  }\n\n  ::v-deep(.splide__slide) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &.is-active {\n      --item-scale: var(--item-scale-lg, 1);\n      --item-shadow: rgba(0, 0, 0, 0.5) 0 0 1rem;\n      z-index: 10;\n    }\n\n    &.is-prev,\n    &.is-next {\n      --item-scale: var(--item-scale-md, 1);\n      --item-delay: .2s;\n    }\n  }\n}\n</style>"],"version":3}