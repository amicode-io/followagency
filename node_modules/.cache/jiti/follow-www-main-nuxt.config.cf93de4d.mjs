"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;
var _vitePluginCompression = _interopRequireDefault(await jitiImport("vite-plugin-compression"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };} // https://nuxt.com/docs/api/configuration/nuxt-config
var _default = exports.default =
defineNuxtConfig({
  ssr: false,
  css: [
  "~/assets/scss/main.scss"],

  components: {
    dirs: [
    { path: '~/components', extensions: ['vue'], global: false }]

  },
  compatibilityDate: "2024-04-03",
  devtools: { enabled: true },
  vite: {
    css: {
      preprocessorOptions: {
        scss: {
          api: "modern",
          silenceDeprecations: ["mixed-decls", "import", "global-builtin"]
        }
      }
    },
    build: {
      minify: 'esbuild',
      rollupOptions: {
        treeshake: true,
        output: {
          manualChunks: {
            vueuse: ['@vueuse/core', '@vueuse/components']
          }
        }
      }
    },
    plugins: [
    (0, _vitePluginCompression.default)({
      algorithm: 'brotliCompress', // Enable Brotli compression
      ext: '.br', // Use .br file extension for Brotli
      threshold: 0 // Compress all files
    })]

  },

  modules: [
  "humblescroll-nuxt",
  "@nuxt/content",
  "@nuxtjs/device",
  "@nuxtjs/html-validator",
  "@vueuse/nuxt",
  "@pinia/nuxt"],


  app: {
    head: {
      htmlAttrs: {
        lang: "pl"
      }
    }
  },
  htmlValidator: {
    usePrettier: true
  },
  humbleScroll: {
    repeat: true,
    mirror: true
  }
}); /* v9-c45efd13c42697bd */
